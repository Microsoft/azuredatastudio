steps:
- task: NodeTool@0
  inputs:
    versionSpec: '10.15.1'
  displayName: 'Install Node.js'

- task: CacheBeta@0
  inputs:
    key: yarn5 | $(Agent.OS) | .yarnrc | remote/.yarnrc | **/yarn.lock, !**/node_modules/**/yarn.lock, !**/.*/**/yarn.lock'
    path: $(Agent.TempDirectory)/cache
    cacheHitVar: CACHE_RESTORED
  displayName: Cache Yarn packages

- task: ExtractFiles@1
  inputs:
    archiveFilePatterns: '$(Agent.TempDirectory)\cache\tmp_cache.tar.gz'
    destinationFolder: '$(Build.SourcesDirectory)'
    cleanDestinationFolder: false
  displayName: Untaring cache
  condition: eq(variables['CACHE_RESTORED'], true)

- script: |
    yarn --frozen-lockfile
  displayName: Install Dependencies
  condition: ne(variables['CACHE_RESTORED'], true)

- template: build/azure-pipelines/tar-cache.yml
  displayName: Tar cache

- script: |
    yarn gulp electron-x64
  displayName: 'Electron'

- script: |
    yarn gulp hygiene
  displayName: Run Hygiene Checks

- script: |
    yarn tslint
  displayName: 'Run TSLint'

- script: |
    yarn strict-null-check
  displayName: 'Run Strict Null Check'

- script: |
    yarn compile
  displayName: 'Compile'

- script: |
    .\scripts\test.bat --reporter mocha-junit-reporter --coverage
  displayName: 'Test'

- task: PublishTestResults@2
  inputs:
    testResultsFiles: 'test-results.xml'
  condition: succeededOrFailed()

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'cobertura'
    summaryFileLocation: $(System.DefaultWorkingDirectory)\.build\coverage\cobertura-coverage.xml
    reportDirectory: $(System.DefaultWorkingDirectory)\.build\coverage\lcov-report
